@model IEnumerable<SON_eStore.Models.frequenttlyRequestedItem>
@{
    ViewBag.Title = "chartindex";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}

<section class="content-header">
    <h1>
        Dashboard
        <small>eStore Chart</small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="/estore/dashboard"><i class="fa fa-dashboard"></i>Dashboard</a></li>
        <li class="active">eStore Chart</li>
    </ol>
</section>
<section class="content">
    <div class="panel panel-default">
        <div class="panel-body">
            <div class=" row no-print">
                <div class="box box-warning">
                    <div class="box-header with-border">
                        <h3 class="box-title">Generate Chart</h3> 
                        <button class="btn btn-danger pull-right" onclick="history.go(-1);"><i class="glyphicon glyphicon-chevron-left"> </i>Go Back</button>                      
                    </div>

                    <div class="box-body">
                        <div class="panel panel-default">
                            <div class="panel-body">
                                <form role="form" name="rptForm" method="post" action="/chart/ChartIndex">
                                    @Html.AntiForgeryToken()
                                    <div class="row">
                                        <div class="col-lg-4">
                                            <label class="control-label" style="font-size:12pt">Date </label> <br>
                                            <div class="input-daterange input-group" id="datepicker">
                                                <input type="text" placeholder="Start Date(dd-mm-yyyy)" class="input-sm form-control" id="sdate" name="startdate" />
                                                <span class="input-group-addon">to</span>
                                                <input type="text" placeholder="End Date(dd-mm-yyyy)" class="input-sm form-control" id="edate" name="enddate" />
                                            </div>
                                        </div>
                                    </div>

                                    <br />

                                    <div class="col-xs-12">
                                        <button id="btnChart" title="generate chart" type="submit" class="btn btn-success pull-left">Generate Chart &nbsp;<i class="glyphicon glyphicon-th-large "></i></button>
                                        <a class="btn btn-info pull-right" href="javascript:window.print()">Print <i class="glyphicon glyphicon-print"></i></a>
                                    </div>

                                </form>

                            </div>
                        </div>

                    </div>
                </div>

            </div>
            @if (!string.IsNullOrEmpty(ViewBag.sdt) && !string.IsNullOrEmpty(ViewBag.edt))
            {
                <div class="panel panel-default:">
                    <div class="panel-heading">
                        <div class="panel-title">
                            <h2>Requested Items Chart</h2><br />
                            <b>From : </b>&nbsp; @ViewBag.sdt <br />
                            <b>To: </b> &nbsp; @ViewBag.edt
                        </div>
                    </div>
                    <div class="panel-body">
                        <div class="chart-responsive">
                            <canvas id="barChart"height="100" style="width:inherit"> </canvas>
                        </div>
                        @*<div class="row no-print">
                                <div class="col-xs-12">
                                    <a class="btn btn-info pull-right" href="javascript:window.print()">Print <i class="glyphicon glyphicon-print"></i></a>
                                </div>
                            </div>*@
                    </div>
                </div>
            }

        </div>
    </div>
</section>

@section scripts{
<script src="~/Scripts/bootstrap-datepicker.js"></script>

    <script type='text/javascript'>
        $(".input-daterange").datepicker({
            format: "dd-mm-yyyy",
            clearBtn: true,
            autoclose: true,
            //orientation: "bottom right",
            todayHighlight: true

        })
        //alert(aDatasets1)
        var data = @Html.Raw(Json.Encode(Model));
        var aLabels = [];
        var aDatasets1 = [];
        for (var i in data) {
            aLabels.push(data[i].item_name)
            aDatasets1.push(data[i].totalRequested)
        }
        var dynamicColors = function () {
            var r = Math.floor(Math.random() * 255);
            var g = Math.floor(Math.random() * 255);
            var b = Math.floor(Math.random() * 255);
            return "rgb(" + r + "," + g + "," + b + ")";
        }
        var areaChartData = {
            labels: aLabels,
            datasets: [
              {
                  label: "Store Items",
                  data: aDatasets1,
                  fillColor: dynamicColors(),
                  strokeColor: "rgba(210, 214, 222, 1)",
                  pointColor: "rgba(210, 214, 222, 1)",
                  pointStrokeColor: "#c1c7d1",
                  pointHighlightFill: "#fff",
                  pointHighlightStroke: "rgba(220,220,220,1)",
              }
            ]
        };
        var barChartCanvas = $("#barChart").get(0).getContext("2d");      
        var barChartData = areaChartData;
      
        var barChartOptions = {
            responsive: true,
            title: { display: true, text: 'CHART.JS DEMO CHART' },
            legend: { position: 'bottom' },
            scales: {
                xAxes: [{ gridLines: { display: false }, display: true, scaleLabel: { display: false, labelString: '' } }],
                yAxes: [{ gridLines: { display: false }, display: true, scaleLabel: { display: false, labelString: '' }, ticks: { stepSize: 50, beginAtZero: true } }]
            }
        };

        barChartOptions.datasetFill = false;
        window.barChart = new Chart(barChartCanvas).Bar(barChartData, barChartOptions);
        var bars = barChart.datasets[0].bars;
        for (i = 0; i < bars.length; i++) {
            var color = dynamicColors();
            bars[i].fillColor = color;

        }
        barChart.update();
    </script>
}